{"uid":"b6b3c4053110c93","name":"POST Raw Text","fullName":"Postman Echo Request/Request Methods#POST Raw Text","historyId":"55b7d7ac1fa68c23e3f5a9c9090bc16c:259107dfe718cf3dd08873d72c204add","time":{"start":1729810291296,"stop":1729810291342,"duration":46},"description":"The HTTP `POST` request method is meant to transfer data to a server \n(and elicit a response). What data is returned depends on the implementation\nof the server.\n\nA `POST` request can pass parameters to the server using \"Query String \nParameters\", as well as the Request Body. For example, in the following request,\n\n> POST /hi/there?hand=wave\n>\n> <request-body>\n\nThe parameter \"hand\" has the value \"wave\". The request body can be in multiple\nformats. These formats are defined by the MIME type of the request. The MIME \nType can be set using the ``Content-Type`` HTTP header. The most commonly used \nMIME types are:\n\n* `multipart/form-data`\n* `application/x-www-form-urlencoded`\n* `application/json`\n\nThis endpoint echoes the HTTP headers, request parameters, the contents of\nthe request body and the complete URI requested.","descriptionHtml":"The HTTP `POST` request method is meant to transfer data to a server <br>(and elicit a response). What data is returned depends on the implementation<br>of the server.<br><br>A `POST` request can pass parameters to the server using \"Query String <br>Parameters\", as well as the Request Body. For example, in the following request,<br><br>> POST /hi/there?hand=wave<br>><br>> <request-body><br><br>The parameter \"hand\" has the value \"wave\". The request body can be in multiple<br>formats. These formats are defined by the MIME type of the request. The MIME <br>Type can be set using the ``Content-Type`` HTTP header. The most commonly used <br>MIME types are:<br><br> `multipart/form-data`<br> `application/x-www-form-urlencoded`<br> `application/json`<br><br>This endpoint echoes the HTTP headers, request parameters, the contents of<br>the request body and the complete URI requested.","status":"passed","flaky":false,"newFailed":false,"newBroken":false,"newPassed":false,"retriesCount":0,"retriesStatusChange":false,"beforeStages":[],"testStage":{"description":"The HTTP `POST` request method is meant to transfer data to a server \n(and elicit a response). What data is returned depends on the implementation\nof the server.\n\nA `POST` request can pass parameters to the server using \"Query String \nParameters\", as well as the Request Body. For example, in the following request,\n\n> POST /hi/there?hand=wave\n>\n> <request-body>\n\nThe parameter \"hand\" has the value \"wave\". The request body can be in multiple\nformats. These formats are defined by the MIME type of the request. The MIME \nType can be set using the ``Content-Type`` HTTP header. The most commonly used \nMIME types are:\n\n* `multipart/form-data`\n* `application/x-www-form-urlencoded`\n* `application/json`\n\nThis endpoint echoes the HTTP headers, request parameters, the contents of\nthe request body and the complete URI requested.","descriptionHtml":"The HTTP `POST` request method is meant to transfer data to a server <br>(and elicit a response). What data is returned depends on the implementation<br>of the server.<br><br>A `POST` request can pass parameters to the server using \"Query String <br>Parameters\", as well as the Request Body. For example, in the following request,<br><br>> POST /hi/there?hand=wave<br>><br>> <request-body><br><br>The parameter \"hand\" has the value \"wave\". The request body can be in multiple<br>formats. These formats are defined by the MIME type of the request. The MIME <br>Type can be set using the ``Content-Type`` HTTP header. The most commonly used <br>MIME types are:<br><br> `multipart/form-data`<br> `application/x-www-form-urlencoded`<br> `application/json`<br><br>This endpoint echoes the HTTP headers, request parameters, the contents of<br>the request body and the complete URI requested.","status":"passed","steps":[{"name":"response is valid JSON","time":{"start":1729810291338,"stop":1729810291338,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"stepsCount":0,"shouldDisplayMessage":false,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"response has post data","time":{"start":1729810291338,"stop":1729810291338,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"stepsCount":0,"shouldDisplayMessage":false,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"response matches the data posted","time":{"start":1729810291338,"stop":1729810291338,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"stepsCount":0,"shouldDisplayMessage":false,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"content-type equals text/plain","time":{"start":1729810291339,"stop":1729810291339,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"stepsCount":0,"shouldDisplayMessage":false,"attachmentsCount":0,"hasContent":false,"attachmentStep":false}],"attachments":[{"uid":"a36e7cb6eb121983","name":"TestScript","source":"a36e7cb6eb121983.txt","type":"text/plain","size":507},{"uid":"e4e4f000e0d58499","name":"ConsoleLogs","source":"e4e4f000e0d58499.txt","type":"text/plain","size":157},{"uid":"3aea90066e6b6293","name":"Request Headers","source":"3aea90066e6b6293.json","type":"application/json","size":445},{"uid":"2535e486f52ad1b0","name":"Request Body","source":"2535e486f52ad1b0.txt","type":"text/plain","size":256},{"uid":"3b47b5878800711e","name":"Response Headers","source":"3b47b5878800711e.json","type":"application/json","size":379},{"uid":"bb50c2b4a10fc964","name":"Response Body","source":"bb50c2b4a10fc964.txt","type":"text/plain","size":1006}],"parameters":[],"stepsCount":4,"shouldDisplayMessage":false,"attachmentsCount":6,"hasContent":true,"attachmentStep":false},"afterStages":[],"labels":[{"name":"language","value":"javascript"},{"name":"framework","value":"newman"},{"name":"host","value":"fv-az654-502"},{"name":"thread","value":"pid-1868-worker-main"},{"name":"parentSuite","value":"Postman Echo Request"},{"name":"suite","value":"Request Methods"},{"name":"resultFormat","value":"allure2"}],"parameters":[{"name":"Request","value":"POST - https://postman-echo.com/post"},{"name":"Response Code","value":"200"}],"links":[],"hidden":false,"retry":false,"extra":{"severity":"normal","retries":[],"categories":[],"tags":[]},"source":"b6b3c4053110c93.json","parameterValues":["POST - https://postman-echo.com/post","200"]}